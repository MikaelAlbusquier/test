<?php

namespace AppBundle\Entity;

use AppBundle\Model\Traits\AutoGeneratedIdTrait;
use AppBundle\Model\Traits\LifeCycleDateTimeTrait;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * Event
 *
 * @ORM\Table(name="event")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\EventRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Event
{
    use AutoGeneratedIdTrait,
        LifeCycleDateTimeTrait;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255, nullable=true)
     */
    private $title;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="bookedFor", type="datetime", nullable=true)
     */
    private $bookedFor;

    /**
     * Many Events have one Venue.
     *
     * @var Venue
     * @ORM\ManyToOne(targetEntity="Venue", inversedBy="events")
     * @ORM\JoinColumn(name="venue_id", referencedColumnName="id")
     */
    private $venue;

    /**
     * Many Events have many Users
     *
     * @var ArrayCollection
     * @ORM\ManyToMany(targetEntity="User", mappedBy="events")
     * @ORM\JoinTable(name="user_event")
     */
    private $users;

    /**
     * Event constructor.
     */
    public function __construct()
    {
        $this->users = new ArrayCollection();
    }

    /**
     * Set title
     *
     * @param string $title
     *
     * @return Event
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set bookedFor
     *
     * @param \DateTime $bookedFor
     *
     * @return Event
     */
    public function setBookedFor($bookedFor)
    {
        $this->bookedFor = $bookedFor;

        return $this;
    }

    /**
     * Get bookedFor
     *
     * @return \DateTime
     */
    public function getBookedFor()
    {
        return $this->bookedFor;
    }

    /**
     * @return Venue
     */
    public function getVenue()
    {
        return $this->venue;
    }

    /**
     * @param Venue $venue
     * @return Event
     */
    public function setVenue(Venue $venue)
    {
        $this->venue = $venue;

        return $this;
    }

    /**
     * @return ArrayCollection
     */
    public function getUsers()
    {
        return $this->users;
    }

    /**
     * @param User $user
     * @return $this
     */
    public function addUser(User $user)
    {
        $this->users->add($user);

        return $this;
    }

    /**
     * @param User $user
     * @return $this
     */
    public function removeUser(User $user)
    {
        $this->users->removeElement($user);

        return $this;
    }

    /**
     * @return string
     */
    public function __toString()
    {
        return $this->title;
    }
}
