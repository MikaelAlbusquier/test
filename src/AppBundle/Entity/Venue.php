<?php

namespace AppBundle\Entity;

use AppBundle\Model\Traits\AutoGeneratedIdTrait;
use AppBundle\Model\Traits\LifeCycleDateTimeTrait;
use AppBundle\Model\Traits\UniqueNameTrait;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * Venue
 *
 * @ORM\Table(name="venue")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\VenueRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Venue
{
    use AutoGeneratedIdTrait,
        UniqueNameTrait,
        LifeCycleDateTimeTrait;

    /**
     * Many Venues have many Foods.
     *
     * @var ArrayCollection
     * @ORM\ManyToMany(targetEntity="Food", inversedBy="venues")
     */
    private $foods;

    /**
     * Many Venues have many Drinks.
     *
     * @var ArrayCollection
     * @ORM\ManyToMany(targetEntity="Drink", inversedBy="venues")
     */
    private $drinks;

    /**
     * One Venue has Many Events.
     *
     * @var ArrayCollection
     * @ORM\OneToMany(targetEntity="Event", mappedBy="venue")
     */
    private $events;

    /**
     * Venue constructor.
     */
    public function __construct()
    {
        $this->foods = new ArrayCollection();
        $this->drinks = new ArrayCollection();
        $this->events = new ArrayCollection();
    }

    /**
     * @return ArrayCollection
     */
    public function getEvents()
    {
        return $this->events;
    }

    /**
     * @param Event $event
     * @return $this
     */
    public function addEvent(Event $event)
    {
        $this->events->add($event);

        return $this;
    }

    /**
     * @param Event $event
     * @return $this
     */
    public function removeEvent(Event $event)
    {
        $this->events->removeElement($event);

        return $this;
    }

    /**
     * @return ArrayCollection
     */
    public function getDrinks()
    {
        return $this->drinks;
    }

    /**
     * @param Drink $drink
     * @return $this
     */
    public function addDrink(Drink $drink)
    {
        $this->drinks->add($drink);

        return $this;
    }

    /**
     * @param Drink $drink
     * @return $this
     */
    public function removeDrink(Drink $drink)
    {
        $this->drinks->removeElement($drink);

        return $this;
    }

    /**
     * @return ArrayCollection
     */
    public function getFoods()
    {
        return $this->foods;
    }

    /**
     * @param Food $food
     * @return $this
     */
    public function addFood(Food $food)
    {
        $this->foods->add($food);

        return $this;
    }

    /**
     * @param Food $food
     * @return $this
     */
    public function removeFood(Food $food)
    {
        $this->foods->removeElement($food);

        return $this;
    }

    /**
     * @return string
     */
    public function __toString()
    {
        return $this->name;
    }
}
